
/* ===== Key animations  ===== */
/* This file contains various CSS animations and effects for use in a web application.
   It includes animations for loading spinners, buttons, particles, and game objects. */
/* Specific animations include spinning,
bouncing, pulsing, fading in, sliding in, scaling, rainbow effects, glowing, floating, wiggling, and shaking.
Additionally, it includes particle animations for different colors and power-up effects.
Game object animations are also defined for treats and pets with different states.
Transition effects and hover effects are provided for interactive elements. */
@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

@keyframes bounce {
    0%, 100% {
        transform: translateY(0);
        animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
    }
    50% {
        transform: translateY(-25%);
        animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
    }
}
/* Keyframe pulsing animation.
    I added this to create a subtle pulsing effect for the loading spinner and other elements.
    The animation alternates between full opacity and half opacity to create a breathing effect.
*/
@keyframes pulse {
    0%, 100% {
        opacity: 1;
    }
    50% {
        opacity: 0.5;
    }
}
/* Fade-in animation.
    This animation provides this cool smooth shifting effect when elements appear on the screen.
*/

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
/* Slide-in animations for elements entering the viewport.
These animations slide elements in from the top or bottom with a fade effect.
*/
@keyframes slideInUp {
    from {
        transform: translateY(100%);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes slideInDown {
    from {
        transform: translateY(-100%);
        opacity: 0;
    }
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes scaleIn {
    from {
        transform: scale(0.8);
        opacity: 0;
    }
    to {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes rainbow {
    0% { filter: hue-rotate(0deg); }
    25% { filter: hue-rotate(90deg); }
    50% { filter: hue-rotate(180deg); }
    75% { filter: hue-rotate(270deg); }
    100% { filter: hue-rotate(360deg); }
}

@keyframes glow {
    0%, 100% {
        box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
    }
    50% {
        box-shadow: 0 0 20px rgba(255, 255, 255, 0.8);
    }
}

@keyframes float {
    0%, 100% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-10px);
    }
}

@keyframes wiggle {
    0%, 100% { transform: rotate(0deg); }
    25% { transform: rotate(-3deg); }
    75% { transform: rotate(3deg); }
}

@keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
}

/* ===== animations classes ===== */

.animate-spin {
    animation: spin 1s linear infinite;
}

.animate-bounce {
    animation: bounce 1s infinite;
}

.animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.animate-fadeIn {
    animation: fadeIn 0.5s ease-out forwards;
}

.animate-slideInUp {
    animation: slideInUp 0.5s ease-out forwards;
}

.animate-slideInDown {
    animation: slideInDown 0.5s ease-out forwards;
}

.animate-scaleIn {
    animation: scaleIn 0.3s ease-out forwards;
}

.animate-rainbow {
    animation: rainbow 3s linear infinite;
}

.animate-glow {
    animation: glow 2s ease-in-out infinite;
}

.animate-float {
    animation: float 3s ease-in-out infinite;
}

.animate-wiggle {
    animation: wiggle 1s ease-in-out infinite;
}

.animate-shake {
    animation: shake 0.5s ease-in-out;
}

/* ===== PARTICLE ANIMATIONS ===== */

.particle {
    position: absolute;
    pointer-events: none;
    border-radius: 50%;
    animation: particleFloat 2s ease-out forwards;
}

@keyframes particleFloat {
    0% {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
    100% {
        opacity: 0;
        transform: translateY(-100px) scale(0.5);
    }
}

.particle-gold {
    background: linear-gradient(45deg, #ffd700, #ffed4e);
    box-shadow: 0 0 10px rgba(255, 215, 0, 0.7);
}

.particle-blue {
    background: linear-gradient(45deg, #3b82f6, #60a5fa);
    box-shadow: 0 0 10px rgba(59, 130, 246, 0.7);
}

.particle-red {
    background: linear-gradient(45deg, #ef4444, #f87171);
    box-shadow: 0 0 10px rgba(239, 68, 68, 0.7);
}

.particle-rainbow {
    background: linear-gradient(45deg, #ff0000, #ff8000, #ffff00, #00ff00, #0080ff, #8000ff);
    animation: particleFloat 2s ease-out forwards, rainbow 0.5s linear infinite;
}

/* ===== POWER-UP EFFECTS ===== */

.powerup-speed {
    filter: hue-rotate(60deg) brightness(1.2);
    animation: glow 0.5s ease-in-out infinite;
}

.powerup-magnet {
    filter: hue-rotate(120deg) brightness(1.2);
    animation: pulse 1s ease-in-out infinite;
}

.powerup-double {
    filter: hue-rotate(280deg) brightness(1.2);
    animation: rainbow 2s linear infinite;
}

.powerup-shield {
    filter: hue-rotate(30deg) brightness(1.2);
    animation: glow 1s ease-in-out infinite;
}

.powerup-freeze {
    filter: hue-rotate(200deg) brightness(1.2);
    animation: pulse 1.5s ease-in-out infinite;
}

/* ===== GAME OBJECT ANIMATIONS ===== */

.treat-normal {
    animation: float 2s ease-in-out infinite;
}

.treat-special {
    animation: rainbow 1s linear infinite, float 2s ease-in-out infinite;
}

.bomb-warning {
    animation: shake 0.2s ease-in-out infinite, pulse 0.5s ease-in-out infinite;
}

.pet-happy {
    animation: bounce 1s ease-in-out infinite;
}

.pet-neutral {
    animation: float 3s ease-in-out infinite;
}

.pet-sad {
    animation: shake 0.5s ease-in-out infinite;
}

/* ===== TRANSITION EFFECTS ===== */

.transition-all {
    transition: all 0.3s ease;
}

.transition-fast {
    transition: all 0.15s ease;
}

.transition-slow {
    transition: all 0.5s ease;
}

/* ===== HOVER EFFECTS ===== */

.hover-glow:hover {
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.5);
    transform: scale(1.05);
}

.hover-float:hover {
    transform: translateY(-5px);
}

.hover-spin:hover {
    transform: rotate(5deg);
}
